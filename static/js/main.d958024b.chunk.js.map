{"version":3,"sources":["data.js","state/remain.js","components/Test.js","components/Good.js","Detail.js","Loader.js","Cart.js","App.js","serviceWorker.js","index.js"],"names":["id","title","content","price","재고context","React","createContext","Test","i","재고","useContext","Good","shoe","className","to","src","width","alt","toString","replace","박스","styled","div","제목","h4","props","색상","Info","console","log","TabContent","누른탭","스위치변경","useEffect","connect","state","reducer","shoes","재고변경","dispatch","재고1","useState","showAlert","showAlert변경","inputData","inputData변경","누른탭변경","스위치","timer","setTimeout","clearTimeout","useParams","history","useHistory","filter","v","onChange","e","target","value","onClick","temp","type","payload","name","quan","push","goBack","Nav","variant","defaultActiveKey","Item","Link","eventKey","CSSTransition","in","classNames","timeout","Loader","Spinner","as","animation","size","role","aria-hidden","alert열렸니","reducer2","Table","responsive","map","key","App","Data","shoes변경","loading","setLoading","clickBtnCount","setClickBtnCount","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","NavDropdown","href","Divider","exact","path","Jumbotron","Provider","axios","get","then","data","catch","error","Boolean","window","location","hostname","match","초기값","store","createStore","combineReducers","액션","copy","alert","sameItemPlace","findIndex","ReactDOM","render","StrictMode","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d958024b.chunk.js","sourcesContent":["export default [\n  {\n    id : 0,\n    title : \"White and Black\",\n    content : \"Born in France\",\n    price : 120000\n  },\n\n  {\n    id : 1,\n    title : \"Red Knit\",\n    content : \"Born in Seoul\",\n    price : 110000\n  },\n\n  {\n    id : 2,\n    title : \"Grey Yordan\",\n    content : \"Born in the States\",\n    price : 130000\n  }\n] ","import React from \"react\";\n\nexport let 재고context = React.createContext();\n","import React, { useContext } from 'react';\nimport { 재고context } from '../state/remain';\n\nexport default function Test({ i }) {\n  let 재고 = useContext(재고context);\n\n  return (\n    <>\n      <p>재고: {재고[i]}</p>\n    </>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Test from './Test';\n\nexport default function Good({ shoe, i }) {\n  return (\n    <>\n      <div className='col-md-4'>\n        <Link to={`detail/${i}`}>\n          <img src={`https://codingapple1.github.io/shop/shoes${i + 1}.jpg`} width='100%' alt={'판매상품'} />\n          <h4>{shoe.title}</h4>\n          <p>{shoe.content}</p>\n          <p>{shoe.price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}</p>\n          <Test i={i}></Test>\n        </Link>\n      </div>\n    </>\n  );\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport './Detail.scss';\nimport { Nav } from 'react-bootstrap';\nimport { 재고context } from './state/remain';\nimport { CSSTransition } from 'react-transition-group';\nimport { connect } from 'react-redux';\n\nlet 박스 = styled.div`\n  padding: 20px;\n`;\n\nlet 제목 = styled.h4`\n  font-size: 35px;\n  color: ${(props) => props.색상};\n`;\n\nfunction Detail({ shoes, 재고변경, dispatch }) {\n  let 재고1 = useContext(재고context);\n  console.log('재고1 : ', 재고1);\n  let [showAlert, showAlert변경] = useState(false);\n  let [inputData, inputData변경] = useState('');\n\n  let [누른탭, 누른탭변경] = useState(0);\n  let [스위치, 스위치변경] = useState(false);\n\n  useEffect(() => {\n    // 1. 컴포넌트가 보일 때 실행, 컴포넌트가 업데이트 될 때 실행 (컴포넌트 렌더링이 끝난 후 실행)\n    let timer = setTimeout(() => {\n      showAlert변경(true);\n    }, 2000); // setTimeout : 변수에 저장해서 사용 많이 한다 ! 나중에 삭제할일도 있어서.\n    // 2. 컴포넌트가 사라질 때 코드를 실행시킬 수도 있음 . 무조건 함수를 써야 함 (구 언마운트역할)\n    console.log('안녕');\n    return function 어쩌구() {\n      //실행할 코드\n      clearTimeout(timer);\n    };\n\n    // 3. 여러개를 사용하고 싶다면 여러개 써도 된다. (실행 순서는 순차적!)\n  }, [showAlert]);\n\n  let { id } = useParams();\n  let history = useHistory();\n  let { title, content, price } = shoes.filter((v) => v.id === id * 1)[0];\n\n  return (\n    <>\n      <div className='container'>\n        <박스>\n          <제목 className='red'>제목을 써봅니다.</제목>\n        </박스>\n        {inputData}\n        <input\n          onChange={(e) => {\n            inputData변경(e.target.value);\n          }}\n        />\n        {showAlert ? (\n          <div className='my-alert'>\n            <p>재고가 얼마 남지 않았습니다.</p>\n          </div>\n        ) : null}\n        <div className='row'>\n          <div className='col-md-6'>\n            <img src={`https://codingapple1.github.io/shop/shoes${id * 1 + 1}.jpg`} width='100%' alt='이미지' />\n          </div>\n          <div className='col-md-6 mt-4'>\n            <h4 className='pt-5'>{title}</h4>\n            <p>{content}</p>\n            <p>{price}</p>\n            <Info id={id}></Info>\n            <button\n              className='btn btn-danger'\n              onClick={() => {\n                재고변경(() => {\n                  let temp = [...재고1];\n                  temp[id] = temp[id] - 1;\n                  return temp;\n                });\n                dispatch({ type: '항목추가', payload: { id: id, name: content, quan: 1 } }); // payload는 다른 이름으로도 쓸 수 있음\n                history.push('/cart');\n              }}>\n              주문하기\n            </button>\n            <button\n              className='btn btn-danger'\n              onClick={() => {\n                history.goBack();\n              }}>\n              뒤로가기\n            </button>\n          </div>\n        </div>\n\n        <Nav className='mt-5' variant='tabs' defaultActiveKey='link-0'>\n          <Nav.Item>\n            <Nav.Link\n              eventKey='link-0'\n              onClick={() => {\n                스위치변경(false);\n                누른탭변경(0);\n              }}>\n              Active\n            </Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link\n              eventKey='link-1'\n              onClick={() => {\n                스위치변경(false);\n                누른탭변경(1);\n              }}>\n              Option 2\n            </Nav.Link>\n          </Nav.Item>\n        </Nav>\n\n        <CSSTransition in={스위치} classNames='wow' timeout={500}>\n          <TabContent 누른탭={누른탭} 스위치변경={스위치변경}></TabContent>\n        </CSSTransition>\n      </div>\n    </>\n  );\n}\n\nfunction Info({ id }) {\n  let 재고 = useContext(재고context);\n  console.log('info id : ', id, '재고 : ', 재고);\n  return <p>재고: {재고[id]}</p>;\n}\n\nfunction TabContent({ 누른탭, 스위치변경 }) {\n  useEffect(() => {\n    스위치변경(true);\n  });\n\n  console.log('tab');\n  if (누른탭 === 0) {\n    return <div>0번째 내용입니다.</div>;\n  } else if (누른탭 === 1) {\n    return <div>1번째 내용입니다.</div>;\n  }\n}\n\nfunction state를props화(state) {\n  console.log('state를props화 ', state);\n  return {\n    state: state.reducer,\n  };\n}\n\nexport default connect(state를props화)(Detail); // Cart 에서 store 데이터를 사용하기 위함\n","import React, { useState } from \"react\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nfunction Loader() {\n  return (\n    <Spinner\n      as=\"span\"\n      animation=\"border\"\n      size=\"sm\"\n      role=\"status\"\n      aria-hidden=\"true\"\n    />\n  );\n}\nexport default Loader;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Table } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport './Cart.scss';\n\nfunction Cart(props) {\n  return (\n    <div>\n      <Table responsive>\n        <tr>\n          <th>#</th>\n          <th>상품명</th>\n          <th>수량</th>\n          <th>변경</th>\n        </tr>\n        {props.state.map((v, i) => (\n          <tr key={`cart-${i}`}>\n            <td>{v.id}</td>\n            <td>{v.name}</td>\n            <td>{v.quan}</td>\n            <td>\n              <button\n                onClick={() => {\n                  props.dispatch({ type: '수량증가', payload: i });\n                }}>\n                +\n              </button>\n              <button\n                onClick={() => {\n                  props.dispatch({ type: '수량감소', payload: i });\n                }}>\n                -\n              </button>\n            </td>\n          </tr>\n        ))}\n      </Table>\n      {props.alert열렸니 ? (\n        <div className='my-alert2'>\n          <p>지금 구매하시면 신규할인 20%</p>\n          <button\n            onClick={() => {\n              props.dispatch({ type: '얼럿닫기' });\n            }}>\n            닫기\n          </button>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\n// redux를 쓰는 이유\n// 깊은 하위 컴포넌트들도 props 여러번 전송없이 state를 직접 갖다쓸 수 있음\nfunction state를props화(state) {\n  console.log('state를props화 ', state);\n  return {\n    state: state.reducer,\n    alert열렸니: state.reducer2, //리듀서2에 있는거 가져오는법\n  };\n}\n\nexport default connect(state를props화)(Cart); // Cart 에서 store 데이터를 사용하기 위함\n\n// export default Cart;\n","/* eslint-disable */\nimport React, { useState } from 'react';\nimport { Navbar, Nav, NavDropdown, Jumbotron } from 'react-bootstrap';\nimport './App.css';\nimport Data from './data.js';\nimport Good from './components/Good';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport Detail from './Detail.js';\nimport axios from 'axios';\nimport Loader from './Loader';\nimport { 재고context } from './state/remain';\nimport Cart from './Cart';\n\nfunction App() {\n  let [shoes, shoes변경] = useState(Data);\n  let [loading, setLoading] = useState(false);\n  let [clickBtnCount, setClickBtnCount] = useState(0);\n  let [재고, 재고변경] = useState([10, 11, 12, 13, 14, 15, 16]); // 많은 컴포넌트들이 사용할 것 같기에 이곳에 작성\n\n  return (\n    <div className='App'>\n      <Navbar bg='light' expand='lg'>\n        <Navbar.Brand>sunny's MALL</Navbar.Brand>\n        <Navbar.Toggle aria-controls='basic-navbar-nav' />\n        <Navbar.Collapse id='basic-navbar-nav'>\n          <Nav className='ml-auto'>\n            <Nav.Link as={Link} to='/'>\n              Home\n            </Nav.Link>\n            <Nav.Link as={Link} to='/cart'>\n              Cart\n            </Nav.Link>\n            <NavDropdown title='Dropdown' id='basic-nav-dropdown'>\n              <NavDropdown.Item href='#action/3.1'>Action</NavDropdown.Item>\n              <NavDropdown.Item href='#action/3.2'>Another action</NavDropdown.Item>\n              <NavDropdown.Item href='#action/3.3'>Something</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href='#action/3.4'>Separated link</NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n\n      <Switch>\n        <Route exact path='/'>\n          <div>\n            <Jumbotron className='background'>\n              <h1>Welcome</h1>\n              <p>리액트 학습을 위해 만든 쇼핑몰입니다 :)</p>\n            </Jumbotron>\n            <div className='container'>\n              <재고context.Provider value={재고}>\n                <div className='row'>\n                  {shoes.map((v, i) => (\n                    <Good shoe={v} key={`${v.title}${i}`} i={i} onClick={() => {}} />\n                  ))}\n                </div>\n              </재고context.Provider>\n              {!clickBtnCount && (\n                <button\n                  className='btn btn-primary'\n                  onClick={() => {\n                    setLoading(true);\n                    axios\n                      .get('https://codingapple1.github.io/shop/data2.json')\n                      .then((v) => {\n                        setClickBtnCount(1);\n                        setLoading(false);\n                        console.log('성공', v);\n                        shoes변경([...shoes, ...v.data]);\n                      })\n                      .catch(() => {\n                        setLoading(false);\n                        console.error('실패');\n                      });\n                  }}>\n                  {loading && <Loader />}\n                  더보기\n                </button>\n              )}\n            </div>\n          </div>\n        </Route>\n        <Route path='/detail/:id'>\n          <재고context.Provider value={재고}>\n            <Detail shoes={shoes} 재고변경={재고변경} />\n          </재고context.Provider>\n        </Route>\n        <Route path='/cart'>\n          <Cart></Cart>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers } from 'redux';\n\nlet 초기값 = [\n  { id: 0, name: '나이키', quan: 1 },\n  { id: 1, name: '아디다스', quan: 2 },\n  { id: 2, name: '스케쳐스', quan: 2 },\n  { id: 3, name: '뉴발란스', quan: 2 },\n];\n\nfunction reducer(state = 초기값, 액션) {\n  console.log('액션: ', 액션);\n  // 데이터 수정을 담음\n\n  let copy = [...state];\n  const target = 액션.payload;\n\n  if (액션.type === '수량증가') {\n    copy[target].quan++;\n\n    // 데이터 수정조건 담기\n    return copy;\n  }\n  if (액션.type === '수량감소') {\n    if (copy[target].quan - 1 < 1) {\n      alert('더 이상 수량을 감소할 수 없습니다.');\n      return copy;\n    }\n\n    copy[target].quan--;\n\n    // 데이터 수정조건 담기\n    return copy;\n  } else if (액션.type === '항목추가') {\n    let copy = [...state];\n    const sameItemPlace = copy.findIndex((v) => 액션.payload.name === v.name);\n\n    if (sameItemPlace === -1) {\n      copy.push(액션.payload);\n    } else {\n      copy[sameItemPlace].quan++;\n    }\n    return copy;\n  } else {\n    return state;\n  }\n}\n\nlet alert초기값 = true;\n\nfunction reducer2(state = alert초기값, 액션) {\n  if (액션.type === '얼럿닫기') {\n    return false;\n  }\n  console.log('reducer2 ', state, 액션);\n  return state;\n}\n\nlet store = createStore(combineReducers({ reducer, reducer2 }));\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}